// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// TileType Type of the tile on the board. A plain tile is by default used for all tiles of a board for which no tile element was even given. As such
// swagger:model tileType
type TileType string

const (
	// TileTypePlain captures enum value "plain"
	TileTypePlain TileType = "plain"
	// TileTypeHole captures enum value "hole"
	TileTypeHole TileType = "hole"
	// TileTypeBelt captures enum value "belt"
	TileTypeBelt TileType = "belt"
	// TileTypeFastbelt captures enum value "fastbelt"
	TileTypeFastbelt TileType = "fastbelt"
	// TileTypeRepair captures enum value "repair"
	TileTypeRepair TileType = "repair"
	// TileTypeRepair2x captures enum value "repair2x"
	TileTypeRepair2x TileType = "repair2x"
)

// for schema
var tileTypeEnum []interface{}

func init() {
	var res []TileType
	if err := json.Unmarshal([]byte(`["plain","hole","belt","fastbelt","repair","repair2x"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		tileTypeEnum = append(tileTypeEnum, v)
	}
}

func (m TileType) validateTileTypeEnum(path, location string, value TileType) error {
	if err := validate.Enum(path, location, value, tileTypeEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this tile type
func (m TileType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateTileTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
