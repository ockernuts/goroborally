// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// Direction Orientation of the tile. Required for tiles of type belt, fastbelt, gear. Gears must only use left or right, which is used as rotation direction then. Otherwize direction is by default set to auto, which calculates the direction when a board is read in based on the tile position. As such, one might never see an auto directed tile on the client side. This is done to get a better visual effect.
// swagger:model direction
type Direction string

const (
	// DirectionLeft captures enum value "left"
	DirectionLeft Direction = "left"
	// DirectionRight captures enum value "right"
	DirectionRight Direction = "right"
	// DirectionUp captures enum value "up"
	DirectionUp Direction = "up"
	// DirectionDown captures enum value "down"
	DirectionDown Direction = "down"
	// DirectionAuto captures enum value "auto"
	DirectionAuto Direction = "auto"
)

// for schema
var directionEnum []interface{}

func init() {
	var res []Direction
	if err := json.Unmarshal([]byte(`["left","right","up","down","auto"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		directionEnum = append(directionEnum, v)
	}
}

func (m Direction) validateDirectionEnum(path, location string, value Direction) error {
	if err := validate.Enum(path, location, value, directionEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this direction
func (m Direction) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateDirectionEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
