// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

// SwaggerJSON embedded version of the swagger document used at generation time
var SwaggerJSON json.RawMessage

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Roborally Game server",
    "title": "Roborally",
    "contact": {
      "email": "wim.ockerman@telenet.be"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "0.0.1"
  },
  "basePath": "/api",
  "paths": {
    "/v1/boards": {
      "get": {
        "description": "Retrieve basic info of boards availble on the server",
        "tags": [
          "Board"
        ],
        "operationId": "getBoards",
        "security": null,
        "responses": {
          "200": {
            "description": "boards response",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "for errors 500 in case of bad board provider setup",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/v1/boards/{name}": {
      "get": {
        "description": "Retrieve detailed info of available boards on the server",
        "tags": [
          "Board"
        ],
        "operationId": "getBoardByName",
        "security": null,
        "parameters": [
          {
            "type": "string",
            "description": "Name of the board",
            "name": "name",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "boards response",
            "schema": {
              "$ref": "#/definitions/board"
            }
          },
          "default": {
            "description": "for errors 404 and 500",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "board": {
      "description": "Roborally board on which a game can be played",
      "type": "object",
      "required": [
        "name",
        "description",
        "width",
        "height",
        "tiles"
      ],
      "properties": {
        "description": {
          "description": "If not given upon creation a default description is generated",
          "type": "string",
          "minLength": 1
        },
        "height": {
          "type": "integer",
          "format": "int32",
          "minimum": 1
        },
        "name": {
          "type": "string",
          "minLength": 1
        },
        "tiles": {
          "description": "tiles of the board",
          "type": "array",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/tile"
          }
        },
        "width": {
          "type": "integer",
          "format": "int32",
          "minimum": 1
        }
      }
    },
    "direction": {
      "description": "Orientation of the tile. Required for tiles of type belt, fastbelt, gear. Gears must only use left or right, which is used as rotation direction then. Otherwize direction is by default set to auto, which calculates the direction when a board is read in based on the tile position. As such, one might never see an auto directed tile on the client side. This is done to get a better visual effect.",
      "type": "string",
      "default": "auto",
      "enum": [
        "left",
        "right",
        "up",
        "down",
        "auto"
      ]
    },
    "error": {
      "required": [
        "message"
      ],
      "properties": {
        "message": {
          "type": "string",
          "minLength": 1,
          "readOnly": true
        }
      }
    },
    "tile": {
      "required": [
        "type",
        "x",
        "y"
      ],
      "properties": {
        "direction": {
          "$ref": "#/definitions/direction"
        },
        "type": {
          "description": "Type of the tile on the board. A plain tile is by default used for all tiles of a board for which no tile element was even given. As such ",
          "type": "string",
          "default": "plain",
          "enum": [
            "plain",
            "hole",
            "belt",
            "fastbelt",
            "repair",
            "repair2x"
          ]
        },
        "x": {
          "description": "position of the tile on the board. Range: 0..board.width-1",
          "type": "integer",
          "format": "int32",
          "minimum": 1
        },
        "y": {
          "description": "position of the tile on the board. Range: 0..board.height-1",
          "type": "integer",
          "format": "int32",
          "minimum": 1
        }
      }
    }
  }
}`))
}
